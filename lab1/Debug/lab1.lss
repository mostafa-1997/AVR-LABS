
lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000017a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  0000017a  000001ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000003d8  00000000  00000000  00000200  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000717  00000000  00000000  000005d8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e7       	ldi	r30, 0x7A	; 122
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 bb 00 	jmp	0x176	; 0x176 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
u8 seg []= {	0x3f,0x06,0x5B,0x4F,0x66,
				0x6D,0x7D,0x07,0x7F,0x6F,0x77,
				0x7C,0x39,0x5E,0x79,0x71
		   };
int main()
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
	DDRC |=(1<<2);//led1
  8a:	a4 e3       	ldi	r26, 0x34	; 52
  8c:	b0 e0       	ldi	r27, 0x00	; 0
  8e:	e4 e3       	ldi	r30, 0x34	; 52
  90:	f0 e0       	ldi	r31, 0x00	; 0
  92:	80 81       	ld	r24, Z
  94:	84 60       	ori	r24, 0x04	; 4
  96:	8c 93       	st	X, r24
	DDRC |=(1<<7);//led2
  98:	a4 e3       	ldi	r26, 0x34	; 52
  9a:	b0 e0       	ldi	r27, 0x00	; 0
  9c:	e4 e3       	ldi	r30, 0x34	; 52
  9e:	f0 e0       	ldi	r31, 0x00	; 0
  a0:	80 81       	ld	r24, Z
  a2:	80 68       	ori	r24, 0x80	; 128
  a4:	8c 93       	st	X, r24

	DDRD &=~(1<<6);//sw1
  a6:	a1 e3       	ldi	r26, 0x31	; 49
  a8:	b0 e0       	ldi	r27, 0x00	; 0
  aa:	e1 e3       	ldi	r30, 0x31	; 49
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	80 81       	ld	r24, Z
  b0:	8f 7b       	andi	r24, 0xBF	; 191
  b2:	8c 93       	st	X, r24
	DDRD &=~(1<<0);//sw2
  b4:	a1 e3       	ldi	r26, 0x31	; 49
  b6:	b0 e0       	ldi	r27, 0x00	; 0
  b8:	e1 e3       	ldi	r30, 0x31	; 49
  ba:	f0 e0       	ldi	r31, 0x00	; 0
  bc:	80 81       	ld	r24, Z
  be:	8e 7f       	andi	r24, 0xFE	; 254
  c0:	8c 93       	st	X, r24
	//PORTA |=(1<<6);//pull up sw1
	//PORTA |=(1<<7);//pull up sw2

	while(1) //for(;;)
	{
		if ( ((PIND>>6)&1) == 1)
  c2:	e0 e3       	ldi	r30, 0x30	; 48
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	80 81       	ld	r24, Z
  c8:	82 95       	swap	r24
  ca:	86 95       	lsr	r24
  cc:	86 95       	lsr	r24
  ce:	83 70       	andi	r24, 0x03	; 3
  d0:	88 2f       	mov	r24, r24
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	81 70       	andi	r24, 0x01	; 1
  d6:	90 70       	andi	r25, 0x00	; 0
  d8:	88 23       	and	r24, r24
  da:	79 f0       	breq	.+30     	; 0xfa <main+0x78>
		{
			PORTC |=(1<<2); //led1 on
  dc:	a5 e3       	ldi	r26, 0x35	; 53
  de:	b0 e0       	ldi	r27, 0x00	; 0
  e0:	e5 e3       	ldi	r30, 0x35	; 53
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	84 60       	ori	r24, 0x04	; 4
  e8:	8c 93       	st	X, r24
			PORTC &=~(1<<7);//led2 off
  ea:	a5 e3       	ldi	r26, 0x35	; 53
  ec:	b0 e0       	ldi	r27, 0x00	; 0
  ee:	e5 e3       	ldi	r30, 0x35	; 53
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	80 81       	ld	r24, Z
  f4:	8f 77       	andi	r24, 0x7F	; 127
  f6:	8c 93       	st	X, r24
  f8:	17 c0       	rjmp	.+46     	; 0x128 <main+0xa6>
		}
		else if ( ((PIND>>0)&1) == 1)
  fa:	e0 e3       	ldi	r30, 0x30	; 48
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	80 81       	ld	r24, Z
 100:	88 2f       	mov	r24, r24
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	81 70       	andi	r24, 0x01	; 1
 106:	90 70       	andi	r25, 0x00	; 0
 108:	88 23       	and	r24, r24
 10a:	71 f0       	breq	.+28     	; 0x128 <main+0xa6>
		{
			PORTC &=~(1<<2); //led1 off
 10c:	a5 e3       	ldi	r26, 0x35	; 53
 10e:	b0 e0       	ldi	r27, 0x00	; 0
 110:	e5 e3       	ldi	r30, 0x35	; 53
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	80 81       	ld	r24, Z
 116:	8b 7f       	andi	r24, 0xFB	; 251
 118:	8c 93       	st	X, r24
			PORTC &=~(1<<7);//led2 off
 11a:	a5 e3       	ldi	r26, 0x35	; 53
 11c:	b0 e0       	ldi	r27, 0x00	; 0
 11e:	e5 e3       	ldi	r30, 0x35	; 53
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	8f 77       	andi	r24, 0x7F	; 127
 126:	8c 93       	st	X, r24
		}

		if ( ((PIND>>6)&1) == 0 && ((PIND>>0)&1) == 0)
 128:	e0 e3       	ldi	r30, 0x30	; 48
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	80 81       	ld	r24, Z
 12e:	82 95       	swap	r24
 130:	86 95       	lsr	r24
 132:	86 95       	lsr	r24
 134:	83 70       	andi	r24, 0x03	; 3
 136:	88 2f       	mov	r24, r24
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	81 70       	andi	r24, 0x01	; 1
 13c:	90 70       	andi	r25, 0x00	; 0
 13e:	00 97       	sbiw	r24, 0x00	; 0
 140:	09 f0       	breq	.+2      	; 0x144 <main+0xc2>
 142:	bf cf       	rjmp	.-130    	; 0xc2 <main+0x40>
 144:	e0 e3       	ldi	r30, 0x30	; 48
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	88 2f       	mov	r24, r24
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	81 70       	andi	r24, 0x01	; 1
 150:	90 70       	andi	r25, 0x00	; 0
 152:	00 97       	sbiw	r24, 0x00	; 0
 154:	09 f0       	breq	.+2      	; 0x158 <main+0xd6>
 156:	b5 cf       	rjmp	.-150    	; 0xc2 <main+0x40>
		{
			PORTC |=(1<<7); //led2 on
 158:	a5 e3       	ldi	r26, 0x35	; 53
 15a:	b0 e0       	ldi	r27, 0x00	; 0
 15c:	e5 e3       	ldi	r30, 0x35	; 53
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	80 81       	ld	r24, Z
 162:	80 68       	ori	r24, 0x80	; 128
 164:	8c 93       	st	X, r24
			PORTC &=~(1<<2);//led1 off
 166:	a5 e3       	ldi	r26, 0x35	; 53
 168:	b0 e0       	ldi	r27, 0x00	; 0
 16a:	e5 e3       	ldi	r30, 0x35	; 53
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	80 81       	ld	r24, Z
 170:	8b 7f       	andi	r24, 0xFB	; 251
 172:	8c 93       	st	X, r24
 174:	a6 cf       	rjmp	.-180    	; 0xc2 <main+0x40>

00000176 <_exit>:
 176:	f8 94       	cli

00000178 <__stop_program>:
 178:	ff cf       	rjmp	.-2      	; 0x178 <__stop_program>
